// Ke Tian@2017  -user define JS iframe analysis engine
J$.analysis = {};
((function (sandbox) {
   
    var CRE = document.createElement;
    var iframe = 'iframe';
    var body_append = document.body.appendChild;
    var iframe_object = null;
    // before invoking a function/method
    function invokeFunPre(iid, f, base, args, isConstructor) {
      if (f === CRE) {
        console.log('[myf**k]: find a create function: ' + f.name);
        console.log('\t@' + iidToLocation(iid));
        if (args && args[0] && (typeof args[0]) === 'string') {         
          if (args[0] == iframe)
          {
               console.log('[myf**k]: detect an iframe creation in'
                           +' arge[0]! -> '  + args[0].toString());
                  
               iframe_object = args[0];
               //do more analysis here - ke tian
          }
        }
      }
       
      if (f == body_append)
      {
         console.log('[myf**k]: find a body append function: ' + f.name);
        if (args && args[0]){
          if( typeof iframe_object === 'undefined' || iframe_object === null ){
             // Do nothing here
                    }
          else
          {
            //do something here
            console.log('[myf**k]: detect iframe objection insertion!');
             
          }
        }
      }
    }
   
    function instrumentCode(iid, code) {
      console.log('[warning]: needs to implement this');
      console.log('\t@' + iidToLocation(iid));
      return code;
    }
    var iidToLocation = function (iid) {
      if (window.getLocationFromIID) {
        return window.getLocationFromIID(iid);
      } else {
        return '[iid]: ' + iid;
      }
    }
    sandbox.invokeFunPre = invokeFunPre;
    sandbox.instrumentCode = instrumentCode;
})(J$.analysis));